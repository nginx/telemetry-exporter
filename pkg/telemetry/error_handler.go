package telemetry

import (
	"sync"

	"go.opentelemetry.io/otel"
)

// ErrorHandler capture errors generated by the OpenTelemetry SDK.
// If multiple errors occur, the last error is captured.
type ErrorHandler struct {
	lastError error
	lock      *sync.Mutex
}

var _ otel.ErrorHandler = &ErrorHandler{}

// NewErrorHandler creates a new ErrorHandler.
func NewErrorHandler() *ErrorHandler {
	return &ErrorHandler{
		lock: &sync.Mutex{},
	}
}

// Handle captures the error.
func (e *ErrorHandler) Handle(err error) {
	e.lock.Lock()
	defer e.lock.Unlock()

	e.lastError = err
}

// Error returns the last error captured.
func (e *ErrorHandler) Error() error {
	e.lock.Lock()
	defer e.lock.Unlock()

	return e.lastError
}

// Clear clears the error.
func (e *ErrorHandler) Clear() {
	e.lock.Lock()
	defer e.lock.Unlock()

	e.lastError = nil
}
